
document.getElementById \file .addEventListener \change !->
	reader = new FileReader
	builtins = <[Array.vm Keyboard.vm Math.vm Memory.vm Output.vm Screen.vm String.vm Sys.vm]>

	start = document.getElementById \start
	start.disabled = true
	start.textContent = "translating.."

	# gotta do some fancy async code in order to translate
	# all the needed files
	files = Array::filter.call @files, -> 
		# return all non-builtin .vm files
		/^.+\.vm$/.test it.name and (builtins.indexOf it.name) is -1
	
	file_texts = []

	# this processes them in serial, using only one filereader
	# using multiple readers for parallel process is probably
	# of dubious value
	reader.onload = ->
		file_texts.push @result
		if files.length is 0
			try
				translate file_texts
				vm.reset!
				start.textContent = "Start"
				start.disabled = false
			catch e
				alert "Error translating: #e"
		else
			console.log "reading #{files[*-1].name}"
			@readAsText files.pop!
	
	if files.length > 0
		console.log "reading #{files[*-1].name}"
		reader.readAsText files.pop!
	else
		alert "No non-OS .vm files found in your selection!"

document.getElementById \start .addEventListener \click !-> vm.start!
document.getElementById \stop .addEventListener \click !-> vm.stop!
document.getElementById \reset .addEventListener \click !-> vm.reset!

# set computer's screen context to canvas element
vm.canvas = document.getElementById \canvas .getContext \2d

# listen on document for key events
document.addEventListener \keydown vm.keyboard
document.addEventListener \keyup vm.clearkeyboard

